<?php

/**
 * @file
 *  Provee distintas funcionalidades para geo-localizar esculturas.
 */

/**
 * Implements hook_menu().
 */
function esculturas_mapa_menu() {
  $items['mapa'] = array(
    'title' => 'Mapa Interactivo',
    'description' => 'Mapa Interactivo',
    'page callback' => 'esculturas_mapa_page',
    'access callback' => true,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function esculturas_mapa_theme() {
  $path = drupal_get_path('module', 'esculturas_mapa');

  $base = array(
    'path' => $path . '/theme',
  );

  $themes['esculturas_mapa'] = $base + array(
    'template' => 'esculturas_mapa',
  );

  return $themes;
}

/**
 * Displays put together the information and displays the "/mapa" section of the site.
 */
function esculturas_mapa_page() {
  drupal_add_js(drupal_get_path('module', 'esculturas_mapa') . '/js/mapa.js');

  //traer todas las esculturas
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node') 
    ->entityCondition('bundle', 'escultura') 
    ->propertyCondition('status', 1) 
    ;

  $result = $query->execute();

  if (isset($result['node'])) {
    $esculturas_nids = array_keys($result['node']);
    $entities_esculturas = entity_load('node', $esculturas_nids);
  }

  $esculturas = array();

  foreach($entities_esculturas as $e){

    $field_autor = null;
    $field_evento = null;
    $field_foto = null;
    $field_ubicacion = null;
    $entity_autor = null;
    $entity_evento = null;              
    $url = null;
    $data = null;        
    $latlon = null;
    $location = array();
    $autor_nid = array();
    $evento_nid = array();            
    $foto_info = array();
    $info = array();
    $foto = array();

    //titulo
    $data['titulo'] = $e->title;   

    //autor        
    $target_id = null;
    $field_autor = field_get_items('node', $e, 'field_autor');
    $target_id = $field_autor[0]['target_id'];
    $autor_nid[] = (int)$target_id;
    $entity_autor = entity_load('node', $autor_nid);
    $data['autor'] = $entity_autor[$autor_nid[0]]->title; 

    //evento          
    $target_id = null;
    $field_evento = field_get_items('node', $e, 'field_evento');
    $target_id = $field_evento[0]['target_id'];
    $evento_nid[] = (int)$target_id;
    $entity_evento = entity_load('node', $evento_nid);
    $data['evento'] = $entity_evento[$evento_nid[0]]->title; 

    //ubicacion         
    $target_id = null;
    $field_ubicacion = field_get_items('node', $e, 'field_ubicacion');       
    $data['ubicacion'] = $field_ubicacion[0]['value']; 

    $info = $data;

    //locacion
    $field_mapa = field_get_items('node', $e, 'field_mapa');              
    $latlon['lat'] = $field_mapa[0]['lat'];
    $latlon['lon'] = $field_mapa[0]['lon'];
    $location = $latlon; 

    //foto                      
    $field_foto = field_get_items('node', $e, 'field_fotos');              
    $foto['uri'] = file_create_url($field_foto[0]['uri']); 

    //link
    $options = array('absolute'=>TRUE);       
    $url['url']= url('esculturas/'.$data['titulo'], $options);
    $url['url']= str_replace('%20','-', $url['url']); 


    $escultura = array($data, $location, $url, $foto);
    $esculturas[] = $escultura;
  }

  return theme('esculturas_mapa', array(
    'esculturas' => $esculturas,
  ));

}
/**
 * Implements hook_perm().
 */
function esculturas_mapa_permission() {
  return array(
    'em get closest nodes by coord' => array(
      'title' => t('EM get closest nodes nodes by coordinates.'),
      'description' => t('Retrieves the closest nodes of a sculpture give a position coordinate.'),
    ),
  );
}
  
/**
 * Implements hook_ctools_plugin_api().
 */
function esculturas_mapa_ctools_plugin_api($owner, $api) {
  if ($owner == 'services' && $api == 'services') {
    return array(
      'version' => 3,
      'file' => 'resources/esculturas_mapa.services.inc',
    );
  }
}